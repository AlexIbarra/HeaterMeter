#!/bin/sh

# Install param will be update, restore, or blank (new)
INSTALL_PARAM="$1"
[ -z "$INSTALL_PARAM" ] && INSTALL_PARAM="new"

uci_set_nomodify() {
  KEY="$1"; shift
  uci -q get $KEY > /dev/null || uci set $KEY="$@"
}

backup_inc() {
# First parameter is file, second paramter means "add wildcard" (*)
grep $1 /etc/sysupgrade.conf > /dev/null || \
  echo "$1${2:+*}" >> /etc/sysupgrade.conf
}

lucid_copy() {
# copy from lucid to linkmeter if it exists in lucid
  INKEY="lucid.linkmeter.$1"
  OUTKEY="linkmeter.daemon.$1"
  VAL=`uci -q get $INKEY`
  [ "$?" -eq 0 ] && uci set $OUTKEY="$VAL"
}

lucid_settings_migrate() {
  if [ -f "/etc/config/lucid" ] ; then
    lucid_copy serial_device
    lucid_copy serial_baud
    lucid_copy rrd_file
    lucid_copy stashpath
    lucid_copy stashpath
    lucid_copy autoback_active
    lucid_copy autoback_inactive
    rm /etc/config/lucid
  fi
}

HARDWARE_MODEL=`grep '^Hardware\t:' /proc/cpuinfo | cut -d' ' -f 2`
if [ "$HARDWARE_MODEL" = "BCM2708" -o "$HARDWARE_MODEL" = "BCM2709" ] ; then
  SERIAL_DEVICE="auto"
  STASHPATH="/mnt/mmcblk0p4/stash"
  AUTOBACK_ACTIVE=5
  AUTOBACK_INACTIVE=60
else
  SERIAL_DEVICE="/dev/ttyS1"
  STASHPATH="/root"
  AUTOBACK_ACTIVE=0
  AUTOBACK_INACTIVE=0
fi

[ -f /etc/config/linkmeter ] || touch /etc/config/linkmeter
uci -q set linkmeter.daemon='section'
uci set linkmeter.daemon.platform=$HARDWARE_MODEL
uci_set_nomodify linkmeter.daemon.daemonize 1
uci_set_nomodify linkmeter.daemon.serial_device $SERIAL_DEVICE
uci_set_nomodify linkmeter.daemon.rrd_file /tmp/hm.rrd
uci_set_nomodify linkmeter.daemon.stashpath $STASHPATH
uci_set_nomodify linkmeter.daemon.autoback_active $AUTOBACK_ACTIVE
uci_set_nomodify linkmeter.daemon.autoback_inactive $AUTOBACK_INACTIVE
uci -q set linkmeter.alarms='section'
uci_set_nomodify linkmeter.alarms.emailtoname 'Your Name'
uci_set_nomodify linkmeter.alarms.emailtoaddress 'chunkylover53@aol.com'
uci_set_nomodify linkmeter.alarms.emailsubject '$pn $al_prep $al_thresh'
uci_set_nomodify linkmeter.alarms.smstoaddress '2125551212@txt.att.net'
uci_set_nomodify linkmeter.alarms.smsmessage 'ALERT $pn is $al_prep $al_thresh \($pcurr\)'
uci -q set linkmeter.ramp='section'
uci_set_nomodify linkmeter.ramp.watch '0'
uci_set_nomodify linkmeter.alarms.pushprovider 'pushbullet'
uci_set_nomodify linkmeter.alarms.pushbullettitle '$pn HM Alert'
uci_set_nomodify linkmeter.alarms.pushmsg '$pn $al_type alarm $al_prep $al_thresh, currently $pcurr'
lucid_settings_migrate

uci commit linkmeter

# Add an alias for luci without the cgi-bin prefix, as all old docs and apps point to this
uci del_list uhttpd.main.alias='/luci=/cgi-bin'
uci add_list uhttpd.main.alias='/luci=/cgi-bin'
uci commit uhttpd

# Change the session timeout from 1hr to 24hrs
SA=`uci -q get luci.sauth.sessiontime`
if [ "$SA" -eq 3600 ] ; then
  uci set luci.sauth.sessiontime=86400
fi

# Include any alarm changes in the backup file
backup_inc /usr/share/linkmeter/alarm- 1
backup_inc /usr/share/linkmeter/email.txt
backup_inc /usr/share/linkmeter/user.css

if [ "$INSTALL_PARAM" = "restore" -o "$INSTALL_PARM" = "new" ] ; then
  if [ "$HARDWARE_MODEL" = "BCM2708" -o "$HARDWARE_MODEL" = "BCM2709" ] ; then
    # Enable the services
    /etc/init.d/config_restore enable
    /etc/init.d/linkmeterd enable
  fi
fi

if [ "$INSTALL_PARAM" = "new" ] ; then
  if [ "$HARDWARE_MODEL" = "BCM2708" -o "$HARDWARE_MODEL" = "BCM2709" ] ; then
    # Only manually load the spi modules
    rm /etc/modules.d/89-spi-bcm2835
    rm /etc/modules.d/spi-dev

    # Disable dhcp server on the lan interface
    uci set dhcp.lan.ignore=1
    uci commit dhcp

    # Setup wifi to be an AP on channel 6 with no encryption
    /usr/bin/wifi-ap -s heatermeter -c 6 -e none
  fi
fi

# On applicable platforms, avrupdate loads HeaterMeter onto the AVR
# pasing the firmware file forces it to overwrite even if AVR already
# contains HeaterMeter unless the noupdate file exists
[ ! -f "/lib/firmware/noupdate" ] && avrupdate /lib/firmware/hm.hex

# Clear the exit status, scripts should continue processing even if the
# avrupdate command fails
true
