#!/bin/sh

# Install param will be update (opkg install/update), restore, or blank (new)
INSTALL_PARAM="$1"
[ -z "$INSTALL_PARAM" ] && INSTALL_PARAM="new"

uci_set_nomodify() {
  KEY="$1"; shift
  uci -q get $KEY > /dev/null || uci set $KEY="$@"
}

uci_add_section() {
  uci -q get $1 > /dev/null || uci -q set $1='section'
}

backup_inc() {
# First parameter is file, second parameter means "add wildcard" (*)
grep $1 /etc/sysupgrade.conf > /dev/null || \
  echo "$1${2:+*}" >> /etc/sysupgrade.conf
}

lucid_copy() {
  # copy from lucid to linkmeter if it exists in lucid
  INKEY="lucid.linkmeter.$1"
  OUTKEY="linkmeter.daemon.$2"
  VAL=`uci -q get $INKEY`
  [ "$?" -eq 0 ] && uci set $OUTKEY="$VAL"
}

lucid_settings_migrate() {
  if [ -f "/etc/config/lucid" ] ; then
    lucid_copy serial_device
    lucid_copy serial_baud
    lucid_copy rrd_file
    lucid_copy stashpath
    lucid_copy stashpath
    lucid_copy autoback_active
    lucid_copy autoback_inactive
    rm /etc/config/lucid
  fi
}

linkmeter_move() {
  # Move key in linkmeter if it exists (remove old)
  INKEY="linkmeter.$1"
  OUTKEY="linkmeter.$2"
  VAL=`uci -q get $INKEY`
  [ "$?" -eq 0 ] && uci set $OUTKEY="$VAL" && uci delete $INKEY
}

linkmeter_settings_migrate() {
  linkmeter_move alarms.emailtoname alarms_email.toname
  linkmeter_move alarms.emailtoaddress alarms_email.toaddress
  linkmeter_move alarms.emailsubject alarms_email.subject

  linkmeter_move alarms.smstoaddress alarms_sms.toaddress
  linkmeter_move alarms.smsmessage alarms_sms.message

  linkmeter_move alarms.pushprovider alarms_push.provider
  linkmeter_move alarms.pushbulletkey alarms_push.pushbulletkey
  linkmeter_move alarms.pushbullettitle alarms_push.pushbullettitle
  linkmeter_move alarms.pushoveruser alarms_push.pushoveruser
  linkmeter_move alarms.pushovertoken alarms_push.pushovertoken
  linkmeter_move alarms.pushmsg alarms_push.message
}

migrate_settings() {
  lucid_settings_migrate
  linkmeter_settings_migrate
}

HARDWARE_MODEL=`grep '^Hardware\t:' /proc/cpuinfo | cut -d' ' -f 2`
if [ "$HARDWARE_MODEL" = "BCM2708" -o "$HARDWARE_MODEL" = "BCM2709" ] ; then
  SERIAL_DEVICE="auto"
  STASHPATH="/mnt/mmcblk0p4/stash"
  AUTOBACK_ACTIVE=5
  AUTOBACK_INACTIVE=60
else
  SERIAL_DEVICE="/dev/ttyS1"
  STASHPATH="/root"
  AUTOBACK_ACTIVE=0
  AUTOBACK_INACTIVE=0
fi

[ -f /etc/config/linkmeter ] || touch /etc/config/linkmeter
uci_add_section linkmeter.daemon
uci set linkmeter.daemon.platform=$HARDWARE_MODEL
uci_set_nomodify linkmeter.daemon.daemonize 1
uci_set_nomodify linkmeter.daemon.serial_device $SERIAL_DEVICE
uci_set_nomodify linkmeter.daemon.rrd_file /tmp/hm.rrd
uci_set_nomodify linkmeter.daemon.stashpath $STASHPATH
uci_set_nomodify linkmeter.daemon.autoback_active $AUTOBACK_ACTIVE
uci_set_nomodify linkmeter.daemon.autoback_inactive $AUTOBACK_INACTIVE

uci_add_section linkmeter.alarms

uci_add_section linkmeter.alarms_email
uci_set_nomodify linkmeter.alarms_email.toname 'Your Name'
uci_set_nomodify linkmeter.alarms_email.toaddress 'chunkylover53@aol.com'
uci_set_nomodify linkmeter.alarms_email.subject '$pn $al_prep $al_thresh'

uci_add_section linkmeter.alarms_sms
uci_set_nomodify linkmeter.alarms_sms.toaddress '2125551212@txt.att.net'
uci_set_nomodify linkmeter.alarms_sms.message 'ALERT $pn is $al_prep $al_thresh \($pcurr\)'

uci_add_section linkmeter.alarms_push
uci_set_nomodify linkmeter.alarms_push.provider 'pushbullet'
uci_set_nomodify linkmeter.alarms_push.pushbullettitle '$pn HM Alert'
uci_set_nomodify linkmeter.alarms_push.message '$pn $al_type alarm $al_prep $al_thresh, currently $pcurr'

uci_add_section linkmeter.ramp
uci_set_nomodify linkmeter.ramp.watch '0'

migrate_settings
uci commit linkmeter

# Add an alias for luci without the cgi-bin prefix, as all old docs and apps point to this
uci del_list uhttpd.main.alias='/luci=/cgi-bin'
uci add_list uhttpd.main.alias='/luci=/cgi-bin'
# If an HTTPS redirect takes place from an AJAX call and the redirect does not allow CORS
# then the browser will error out before redirecting. This effects hm.com/devices as well
# as third party apps pulling HeaterMeter data
uci set uhttpd.main.redirect_https='0'
uci commit uhttpd

# Change the session timeout from 1hr to 24hrs
SA=`uci -q get luci.sauth.sessiontime`
if [ "$SA" -eq 3600 ] ; then
  uci set luci.sauth.sessiontime=86400
fi

# Include any alarm changes in the backup file
backup_inc /usr/share/linkmeter/alarm- 1
backup_inc /usr/share/linkmeter/email.txt
backup_inc /usr/share/linkmeter/user.css

# Enable the services
/etc/init.d/linkmeterd enable
[ -x "/etc/init.d/config_restore" ] && /etc/init.d/config_restore enable

if [ "$INSTALL_PARAM" = "new" ] ; then
  if [ "$HARDWARE_MODEL" = "BCM2708" -o "$HARDWARE_MODEL" = "BCM2709" ] ; then
    # Only manually load the spi modules
    rm /etc/modules.d/89-spi-bcm2835
    rm /etc/modules.d/spi-dev

    # Disable dhcp server on the lan interface
    uci set dhcp.lan.ignore=1
    uci commit dhcp

    # Setup wifi to be an AP on channel 6 with no encryption
    /usr/bin/wifi-ap -s heatermeter -c 6 -e none
  fi
fi

# On applicable platforms, avrupdate loads HeaterMeter onto the AVR
# pasing the firmware file forces it to overwrite even if AVR already
# contains HeaterMeter
[ "$INSTALL_PARAM" != "restore" ] && avrupdate /lib/firmware/hm.hex

# Clear the exit status, scripts should continue processing even if the
# avrupdate command fails
true
