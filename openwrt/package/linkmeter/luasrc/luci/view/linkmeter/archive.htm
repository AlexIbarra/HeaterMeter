<%+header%>
<style>
  .btn-stash { background-image: url(<%=resource%>/database_add.png); padding: 2px; padding-left: 20px; }
  .btn-delete { background-image: url(<%=resource%>/database_delete.png); padding: 2px; padding-left: 20px; }
  .btn-activate { background-image: url(<%=resource%>/arrow_switch.png); padding: 2px; padding-left: 20px; }
  .btn-pad-left { margin-left: 4px; }
  .rrdfile input[autocomplete="off"] { font-size: large; }
</style>
<h2>LinkMeter Database Archives</h2>
<h3>Stash (archive) database</h3>
<p>The temperature log stores at most 24 hours of data. To make your log
available for later review or continuation, the information can be "stashed"
to storage. Using the stash command copies the current log file at the point
it is stashed. Click the name column to rename an archive.</p>
<b>Filename</b> <input id="rrd" name="rrd" type="text" value="<%=os.date("%Y-%m-%d")%>" />
  <input type="submit" class="cbi-button btn-stash" value="Stash" onclick="stashPost()" />
<% 
  local uci = luci.model.uci.cursor()
  local STASH_PATH = uci:get("linkmeter", "daemon", "stashpath")
  local ps = luci.util.execi("df -h " .. STASH_PATH)
  local fsInfo = STASH_PATH
  if ps then
    ps()
    local lineno = 0
    for line in ps do
      lineno = lineno + 1
      if lineno ~= 0 then
        local m = {}
        for value in line:gmatch("[^%s]+") do m[#m+1] = value end
        fsInfo = ("%s (%s) %s available 105KB each"):format(STASH_PATH, m[2], m[4])
        break
      end
    end
  end
%>
  <fieldset class="cbi-section">
  <legend>Stored in <%=fsInfo%></legend>

  <table style="border-spacing: 40px 4px;">
    <tr><th style="border: 1px solid #ddd;">View</th>
      <th style="border: 1px solid #ddd;">Name</th>
      <th style="border: 1px solid #ddd;">Action</th>
    </tr>
<%
local jsonc = require("luci.jsonc")
local yesterday = os.time() - 86400
local files = {}
for fn in nixio.fs.glob(STASH_PATH .. "/*.rrd") do
  local f = {}
  f.path = luci.http.protocol.urlencode(fn)
  f.name = nixio.fs.basename(fn)
  f.stat = nixio.fs.stat(fn)
  if f.stat.type == "reg" then
    files[#files+1] = f
  end
  local conffile = fn:gsub("\.rrd$", ".json")
  f.conf = nixio.fs.readfile(conffile)
end

table.sort(files, function(a,b) return a.stat.mtime < b.stat.mtime end )

for _,f in ipairs(files) do
    local urlView = build_url("admin/lm/home").."?rrd="..f.path
    local urlCsv = build_url("lm/hist").."?hdr=1&amp;rrd="..f.path
    if f.conf then f.conf = jsonc.parse(f.conf) end
%>
    <tr>
      <td>
        <a href="<%=urlView%>"><img src="<%=resource%>/chart_curve.png" />View</a>
        <a href="<%=urlCsv%>"><img src="<%=resource%>/table_go.png" />CSV</a>
      </td>
      <td>
        <div style="color: #999; font-style: italic; font-size: smaller;"><%=os.date("%B %d, %Y  %I:%M%p", f.stat.mtime)%></div>
        <div style="font-size: large;" class="rrdfile"><%=f.name%></div>
        <div><%=f.conf and f.conf.stash and f.conf.stash.desc%></div>
      </td>
      <td>
        <input type="submit" class="cbi-button btn-delete" value="Delete" onclick="stashAction('delete', '<%=f.name%>')" />
<% if f.stat.mtime > yesterday then %>        <br/><input type="submit" class="cbi-button btn-activate" value="Activate as current" onclick="stashAction('restore', '<%=f.name%>')" /><% end %>
      </td>
    </tr>
    <tr><td colspan="3" style="background: #ccc; height: 2px;"></td></tr>
<% end %>
  </table>
 
<% if #files > 0 then %>
  <div class="cbi-section-node">
    <div class="cbi-value cbi-value-last">
      <a href="<%=build_url("admin/lm/stashdb")%>?backup=1">Download all</a> as tar archive
    </div>
  </div>
<% end %>
  </fieldset>
  
  <h3>Reset current database</h3>
  <p>This will clear all data in the current running database and start a new one.<br/>
    <input type="submit" class="cbi-button btn-delete" value="Reset Database" onclick="stashAction('reset')" />
  </p>
<%+linkmeter/include-ifrm%>
<script src="<%=resource%>/js/jquery-all.js" type="text/javascript"></script>
<script type="text/javascript">//<![CDATA[

$(document).ready(function()
{
  $('.rrdfile').editable(rrdNameChanged, {
    data: rrdNameBeforeEdit, height: 'none', select: true, width: 'none', tooltip: 'Click to rename',
    submit: '<input type="button" class="cbi-button cbi-button-save" value="Rename" />',
    cancel: '<input type="button" class="cbi-button cbi-button-reset btn-pad-left" value="Cancel" />'
  });
});

function stashAction(action, rrd, actionvalue)
{
  let postdata = {};
  if (action !== '')
    postdata[action] = actionvalue || 1;
  if (rrd)
    postdata['rrd'] = rrd;

  let actionText = ((action !== '') ? action : '')
    + (rrd ? (' ' + rrd) : '')
    + (actionvalue ? (' to ' + actionvalue) : '');

  return ifrmTarget('<%=build_url("admin/lm/stashdb")%>',
    'Stash ' + actionText + '...',
    function () { setTimeout(ifrmLoaded, 2000); },
    postdata
  );
}

function stashPost()
{
  return stashAction('', $('#rrd').val());
}

function ifrmLoaded()
{
  if (frameLoadFired) return;
  frameLoadFired = true;
  window.location.reload();
}

function rrdNameBeforeEdit(curr, settings)
{
  // Remove '.rrd' from the source name if it was there before, which it should be
  if (curr.endsWith('.rrd'))
    return curr.slice(0, -4);
  else
    return curr;
}

function rrdNameChanged(value, settings)
{
  let old = this.revert;
  console.log("Changed from " + this.revert + " to " + value);
  stashAction('rename', old, value);
  return value;
}

//]]></script>
<%+footer%>
